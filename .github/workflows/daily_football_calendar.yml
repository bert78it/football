name: Daily Football Matches Calendar

on:
  schedule:
    # Run at 11:00 UTC (12:00 Rome time)
    - cron: '0 11 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      reason:
        description: 'Reason for manual workflow run'
        required: false
        default: 'Manual trigger'

jobs:
  generate-calendar:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history to ensure we have all files
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies one by one
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        echo "Installing requests..."
        pip install requests==2.31.0
        echo "Installing python-dotenv..."
        pip install python-dotenv==1.0.0
        echo "Installing google packages..."
        pip install google-auth-oauthlib==1.2.0
        pip install google-auth-httplib2==0.2.0
        pip install google-api-python-client==2.114.0
        echo "Installing icalendar..."
        pip install icalendar==5.0.11
        echo "Installing pytz..."
        pip install pytz==2023.3
        echo "Installing beautifulsoup4..."
        pip install beautifulsoup4==4.12.2
        # List installed packages
        pip list
        # Test imports
        python -c "import requests; import dotenv; import google.oauth2; import icalendar; import pytz; import bs4; print('All imports successful')"
    
    - name: Debug Environment
      env:
        API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
        FOOTBALL_DATA_API_KEY: ${{ secrets.FOOTBALL_DATA_API_KEY }}
        GOOGLE_CALENDAR_CREDENTIALS: ${{ secrets.GOOGLE_CALENDAR_CREDENTIALS }}
        GOOGLE_CALENDAR_TOKEN: ${{ secrets.GOOGLE_CALENDAR_TOKEN }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
      run: |
        echo "=== Environment Variables ==="
        printenv | grep -E "API_|GOOGLE_|RECIPIENT_" | sed 's/=.*/=***/'
        
        echo "=== Creating .env file ==="
        cat > .env << 'EOL'
        API_FOOTBALL_KEY="${{ secrets.API_FOOTBALL_KEY }}"
        FOOTBALL_DATA_API_KEY="${{ secrets.FOOTBALL_DATA_API_KEY }}"
        RECIPIENT_EMAIL="${{ secrets.RECIPIENT_EMAIL }}"
        EOL
        
        echo "=== .env file contents (masked) ==="
        cat .env | sed 's/=.*/=***/'
        
        echo "=== Python Environment Test ==="
        python -c "
        import os
        from dotenv import load_dotenv
        
        print('Environment before loading .env:')
        for var in ['API_FOOTBALL_KEY', 'FOOTBALL_DATA_API_KEY']:
            val = os.getenv(var)
            print(f'{var} present:', bool(val))
            if val:
                print(f'{var} length:', len(val))
        
        print('\nLoading .env file...')
        load_dotenv(verbose=True)
        
        print('\nEnvironment after loading .env:')
        for var in ['API_FOOTBALL_KEY', 'FOOTBALL_DATA_API_KEY']:
            val = os.getenv(var)
            print(f'{var} present:', bool(val))
            if val:
                print(f'{var} length:', len(val))
        "
        
        mkdir -p credentials
        echo "${{ secrets.GOOGLE_CALENDAR_CREDENTIALS }}" > credentials/credentials.json
        echo "${{ secrets.GOOGLE_CALENDAR_TOKEN }}" > credentials/token.json
        
        echo "=== Directory Structure ==="
        ls -la
        ls -la credentials/
    
    - name: Run Scripts
      env:
        API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
        FOOTBALL_DATA_API_KEY: ${{ secrets.FOOTBALL_DATA_API_KEY }}
        GOOGLE_CALENDAR_CREDENTIALS: ${{ secrets.GOOGLE_CALENDAR_CREDENTIALS }}
        GOOGLE_CALENDAR_TOKEN: ${{ secrets.GOOGLE_CALENDAR_TOKEN }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
      run: |
        echo "=== Running fetch_matches.py ==="
        python fetch_matches.py
        
        echo "=== Running fetch_tv_schedule.py ==="
        python fetch_tv_schedule.py
        
        echo "=== Running send_calendar_email.py ==="
        python send_calendar_email.py
